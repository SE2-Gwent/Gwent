plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
}

apply plugin: 'com.diffplug.spotless'

// Read signing.properties file for safe signing inside github action
Properties signingProps = new Properties()
def signingPropsFile = file('signing.properties')
if (signingPropsFile.canRead()){
    signingProps.load(new FileInputStream(signingPropsFile))
}

// Read version.properties file for automatic build incrementation
Properties versionProps = new Properties()
def versionPropsFile = file('version.properties')
if (versionPropsFile.canRead()){
    versionProps.load(new FileInputStream(versionPropsFile))
}

android {
    compileSdk 30
    defaultConfig {
        applicationId "at.aau.se2.gwent"
        minSdk 23
        targetSdk 28
        versionCode versionProps['buildnumber'].toInteger()
        versionName "0.1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        release {
            storeFile = file("gwent-keystore")
            storePassword signingProps['signing.password']
            keyAlias signingProps['signing.alias']
            keyPassword signingProps['signing.keypassword']
        }
    }
    buildTypes {
        debug {
            // https://github.com/vanniktech/gradle-android-junit-jacoco-plugin/issues/194
            // must be false, or jacoco task gets skipped
            testCoverageEnabled false
        }
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

// Automatic Code Formatting
spotless {
    java {
        target '**/*.java'
        googleJavaFormat()
        importOrder 'java', 'javax', 'org', 'com', ''
        removeUnusedImports() // removes any unused imports
    }
}

tasks.register('bumpBuildNumber') {
    doLast {
        def versionBuild = versionProps['buildnumber'].toInteger() + 1
        versionProps['buildnumber'] = versionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0-rc02'
    implementation 'androidx.navigation:navigation-ui-ktx:2.0.0-rc02'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation project(path: ':gamelogic')
    implementation project(path: ':communication')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}